TO BE DONE:
================================================================================
yarn test ./src/tests/useKey.test.js
yarn test ./src/tests/index.test.js

yarn test *.test.js


publish


index.d.ts
source maps
https://github.com/DefinitelyTyped/DefinitelyTyped
https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html


unit testovi


20-30ms, besmisleno, sve je iste brzine
state: sve u jednoj variabli: radiće kešing za register


npm config set registry https //registry.npmjs.org/
npm publish

npm config set registry http://packages.paycor.com/npm/NpmFeed/


useMemo za register funkciju?
const result = useMemo(() => myNumber * 5, [myNumber])

const isAsyncFunction = (v) => Object.prototype.toString.call(v) === '[object AsyncFunction]';

// normalize keys
ref: element => {
	refsMap.current.set(_extractPath(name).join('.'), element);
},

const flattenObject = ob => {
	return Object.keys(ob).reduce((result, k) => {
		if (typeof ob[k] === 'object' && ob[k]) {
			const flatObject = flattenObject(ob[k]);
			Object.keys(flatObject).forEach(k2 => {
				result[`${k}.${k2}`] = flatObject[k2];
			});
		} else {
			result[k] = ob[k];
		}
		return result;
	}, {});
};

-onSubmit string u konstantu


setValue
{
	shouldValidate: true,
	shouldDirty: true
}


mode
This option allows you to configure the validation before onSubmit event.
	* onSubmit	string	Validation will trigger on the submit event and invalid inputs will attach onChange event listeners to re-validate them.

	* onChange	string	Validation will trigger on the change event with each input, and lead to multiple re-renders.
	Warning: this often comes with a significant impact on performance.

	* onBlur	string	Validation will trigger on the blur event.

	onTouched	string
	Validation will trigger on the first blur event. After that, it will trigger on every change event.

	all	string	Validation will trigger on the blur and change events.
* shouldFocusError: true

reValidateMode: onChange | onBlur | onSubmit = 'onChange'

	This option allows you to configure when inputs with errors get re-validated after submit. By default, validation is only triggered during an input change.

